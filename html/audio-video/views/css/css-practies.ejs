<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width='device-width', initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>css 实例练习</title>
    <style>
        /* css 背景颜色 */
        .css-background {
            background-color: red;
            color: #ffffff; 
            zoom: 1;
        }
        .css-background::after {
            display: block;
            clear: both;
            content: "";
            visibility: hidden;
            height: 0
        }
        .css-fl {
            float: left;
        }
        .css-fr {
            float: right;
        }
        .css-b-b1 {
            width: 50px;
            height: 50px;
            background-color: green;
        }
        .css-b-b2 {
            width: 50px;
            height: 50px;
            background-color: yellow;
        }
        .css-b-b3 {
            width: 50px;
            height: 50px;
            background-image: url("/images/4g.png");
            background-size: 100% 100%;
            background-position: 0 0;
            background-repeat: no-repeat;
            /* 固定背景 */
            /* background-attachment: fixed; */
        }
        .css-b-b4 {
            width: 100%;
            height: 50px;
            background-image: url("/images/4g.png");
            background-position: 0 0;
            /* background-size: 0 100%; */
            background-repeat: repeat-x;
            clear: both;
        }
        /* css文本 */
        .css-text {
            margin-top: 20px;
        }
        .css-t-t {
            text-align: center;
        }
        .css-t-d {
            text-align: right;
            text-decoration: underline;
            color: blueviolet;
        }
        .css-t-p1 {
            text-align: justify;
            /* 字符大小写 */
            text-transform: uppercase;
            /* 字符空间 */
            letter-spacing: 2px;
            /* 行高 */
            line-height: 25px;
            /* 字符方向 */
            direction: ltr;
            /* 单词间隔 */
            word-spacing: 15px;
            /* 禁止换行 */
            white-space: nowrap;
            /* 文字对象和图片对象同行对齐 */
            vertical-align: text-top;
        }
        /* CSS的字体 */
        .css-font {
            margin-top: 20px
        }
        .css-f-f {
            font-family: Arial, Helvetica, sans-serif;
            font-size: 24px;
            font-weight: 400;
            font-style: inherit;
            font-variant: small-caps;
            line-height: 30px
            /* font:italic bold 12px/30px Georgia,serif; */
        }
        /* css 链接 */
        .css-a-style a:link{
            color: red;
        }
        .css-a-style a:visited{
            color: blueviolet;
        }
        .css-a-style a:hover{
            color: green;
        }
        .css-a-style a:active{
            color: yellow
        }
        /* 尺寸 */
        .css-size {
            /* width: 250px;
            max-width: 200px;
            min-height: 200px;
            height: 190px; */
        }
    </style>
</head>
<body>
   <div class="css-demo">
       <!-- 设置背景颜色 -->
       <div class="css-background">
            <div class="css-fl css-b-b1"></div>
            <div class="css-fl css-b-b2"></div>
            <div class="css-fl css-b-b3"></div>
            <div class="css-b-b4"></div>
            <div>
                    background	            简写属性，作用是将背景属性设置在一个声明中<br>
                    background-attachment	背景图像是否固定或者随着页面的其余部分滚动<br>
                    background-color	    设置元素的背景颜色<br>
                    background-image	    把图像设置为背景<br>
                    background-position	    设置背景图像的起始位置<br>
                    background-repeat	    设置背景图像是否及如何重复<br><br>
            </div>
       </div>
       <!-- 文本 -->
       <div class="css-text">
           <!-- 颜色、文本对齐、下划线、缩进、文本字母、字符空间、行空间、文字方向、文字间隔、文字换行 -->
           <h3 class="css-t-t">CSS 文字</h3>
           <p class="css-t-d">2019-03-29</p>
            <p class="css-t-p1">
                Lorem ipsum dolor sit amet, consectetur adipisicing elit. 
                Doloribus doloremque numquam voluptatem eum veniam minima fuga expedita voluptatibus enim consectetur, 
                suscipit vitae, quam nobis libero reprehenderit alias. Non, quam assumenda.
                这是一段汉字，啦啦啦反垄断法的
            </p>
       </div>
       <div>
            color	        设置文本颜色<br>
            direction	    设置文本方向<br>
            letter-spacing	设置字符间距<br>
            line-height	    设置行高<br>
            text-align	    对齐元素中的文本<br>
            text-decoration	向文本添加修饰<br>
            text-indent	    缩进元素中文本的首行<br>
            text-shadow	    设置文本阴影<br>
            text-transform	控制元素中的字母<br>
            unicode-bidi	设置或返回文本是否被重写 <br>
            vertical-align	设置元素的垂直对齐<br>
            white-space	    设置元素中空白的处理方式<br>
            word-spacing	设置字间距<br><br>
       </div>
   </div> 
   <!-- CSS的字体 -->
   <div class="css-font">
       <div class="css-f-f">
           姐姐迪恩你奶奶覅i决定将计就计福建加快可是咳咳咳看看价格接近库萨克酷酷的解放军金额看看数控雕刻机借记卡科技开发就看见
       </div>
        <div>
            font	        在一个声明中设置所有的字体属性<br>
            font-family	    指定文本的字体系列<br>
            font-size	    指定文本的字体大小<br>
            font-style	    指定文本的字体样式<br>
            font-variant	以小型大写字体或者正常字体显示文本<br>
            font-weight	    指定字体的粗细<br><br>
        </div>
   </div>
   <!-- CSS链接 -->
   <div class="css-a-style">
       <div>
            <a href="#">tab1</a>
            <a href="#">tab2</a>
            <a href="#">tab3</a>
            <a href="#">tab4</a>
       </div>
       <div>
            a:link - 正常，未访问过的链接<br>
            a:visited - 用户已访问过的链接<br>
            a:hover - 当用户鼠标放在链接上时<br>
            a:active - 链接被点击的那一刻<br><br>
       </div>
   </div>
   <!-- 列表样式 -->
   <div>
       <div>
            list-style	        简写属性。用于把所有用于列表的属性设置于一个声明中<br>
            list-style-image	将图象设置为列表项标志<br>
            list-style-position	设置列表中列表项标志的位置<br>
            list-style-type	    设置列表项标志的类型<br><br>
       </div>
   </div>
   <!-- 盒模型 -->
   <div>
       <div>
            Margin(外边距) - 清除边框外的区域，外边距是透明的<br>
            Border(边框) - 围绕在内边距和内容外的边框<br>
            Padding(内边距) - 清除内容周围的区域，内边距是透明的<br>
            Content(内容) - 盒子的内容，显示文本和图像<br>

            最终元素的总宽度计算公式是这样的：<br>
            总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距<br>

            元素的总高度最终计算公式是这样的：<br>
            总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距<br><br>
       </div>
   </div>
   <!-- 边框 -->
   <div>
       <div>
            border	            简写属性，用于把针对四个边的属性设置在一个声明<br>
            border-style	    用于设置元素所有边框的样式，或者单独地为各边设置边框样式<br>
            border-width	    简写属性，用于为元素的所有边框设置宽度，或者单独地为各边边框设置宽度<br>
            border-color	    简写属性，设置元素的所有边框中可见部分的颜色，或为 4 个边分别设置颜色<br>
            border-bottom	    简写属性，用于把下边框的所有属性设置到一个声明中<br>
            border-bottom-color	设置元素的下边框的颜色<br>
            border-bottom-style	设置元素的下边框的样式<br>
            border-bottom-width	设置元素的下边框的宽度<br>
            border-left	        简写属性，用于把左边框的所有属性设置到一个声明中<br>
            border-left-color	设置元素的左边框的颜色<br>
            border-left-style	设置元素的左边框的样式<br>
            border-left-width	设置元素的左边框的宽度<br>
            border-right	    简写属性，用于把右边框的所有属性设置到一个声明中<br>
            border-right-color	设置元素的右边框的颜色<br>
            border-right-style	设置元素的右边框的样式<br>
            border-right-width	设置元素的右边框的宽度<br>
            border-top	        简写属性，用于把上边框的所有属性设置到一个声明中<br>
            border-top-color	设置元素的上边框的颜色<br>
            border-top-style	设置元素的上边框的样式<br>
            border-top-width	设置元素的上边框的宽度<br><br>
       </div>
   </div>
   <!-- 轮廓 -->
   <div>
       <div>
            outline	        在一个声明中设置所有的轮廓属性<br>
            outline-color	设置轮廓的颜色<br>
            outline-style	设置轮廓的样式<br>
            outline-width	设置轮廓的宽度<br><br>
       </div>
   </div>
   <!-- 外边距、填充 -->
   <div>
       <div>
            margin	        简写属性。在一个声明中设置所有外边距属性<br>
            margin-bottom	设置元素的下外边距<br>
            margin-left	    设置元素的左外边距<br>
            margin-right	设置元素的右外边距<br>
            margin-top	    设置元素的上外边距<br><br>

            padding	使用简写属性设置在一个声明中的所有填充属性<br><br>
            padding-bottom	设置元素的底部填充<br>
            padding-left	设置元素的左部填充<br>
            padding-right	设置元素的右部填充<br>
            padding-top	设置元素的顶部填充<br><br>
       </div>
   </div>
   <!-- 分组和嵌套 -->
   <div>
       <div>
            分组：在样式表中有很多具有相同样式的元素，为了尽量减少代码，你可以使用分组选择器。每个选择器用逗号分隔。<br>
            嵌套：它可能适用于选择器内部的选择器的样式。空格或这大于号可用作嵌套<br><br>
       </div>
   </div>
   <!-- 尺寸 -->
   <div>
       <div class="css-size">
            height	    设置元素的高度<br>
            line-height	设置行高<br>
            max-height	设置元素的最大高度<br>
            max-width	设置元素的最大宽度<br>
            min-height	设置元素的最小高度<br>
            min-width	设置元素的最小宽度<br>
            width	    设置元素的宽度<br><br>
       </div>
   </div>
   <!-- 显示和可见性 -->
   <div>
       <div>
            display：元素如何显示，none不占用空间<br>
            visibility：元素可见性，hidden隐藏但仍占用空间<br><br>
       </div>
   </div>
   <!-- 定位 -->
   <div>
       <div>
            clip	    剪辑一个绝对定位的元素<br><br>
            cursor	    显示光标移动到指定的类型<br>
            overflow    设置当元素的内容溢出其区域时发生的事情<br>
            overflow-y  指定如何处理顶部/底部边缘的内容溢出元素的内容区域<br>
            overflow-x  指定如何处理右边/左边边缘的内容溢出元素的内容区域<br>
            position	指定元素的定位类型	<br>
            &nbsp;&nbsp;&nbsp;&nbsp;absolute：绝对定位，相对于已经定位的父元素<br>
            &nbsp;&nbsp;&nbsp;&nbsp;fixed：固定定位<br>
            &nbsp;&nbsp;&nbsp;&nbsp;relative：相对定位，相对自己位置，移动后原空间不变<br>
            &nbsp;&nbsp;&nbsp;&nbsp;static：默认<br>
            &nbsp;&nbsp;&nbsp;&nbsp;sticky： 基于用户的滚动位置来定位<br>
            right	    定义了定位元素右外边距边界与其包含块右边界之间的偏移<br>
            top	        定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移<br>
            bottom	    定义了定位元素下外边距边界与其包含块下边界之间的偏移<br>
            left	    定义了定位元素左外边距边界与其包含块左边界之间的偏移<br>
            z-index	    设置元素的堆叠顺序<br><br>
       </div>
   </div>
   <!-- overflow -->
   <div>
       <div>
           overflow：控制内容溢出元素框时显示的方式<br>
            visible	默认值。内容不会被修剪，会呈现在元素框之外<br>
            hidden	内容会被修剪，并且其余内容是不可见的<br>
            scroll	内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容<br>
            auto	如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容<br>
            inherit	规定应该从父元素继承 overflow 属性的值<br><br>
       </div>
   </div>
   <!-- 浮动 -->
   <div>
       <div>
            clear	指定不允许元素周围有浮动元素<br>
            float	指定一个盒子（元素）是否可以浮动<br><br>

            四种清除浮动方式：<br><br>
            1、父级div定义伪类：after和zoom<br>
            2.在结尾处添加空div标签clear:both<br>
            3.父级div定义height<br>
            4.父级div定义overflow:hidden<br><br>
       </div>
   </div>
   <!-- 水平、垂直对齐 -->
   <div>
       <div>
           文字居中对齐：text-align: center<br>
           元素居中对齐：width: 90%;margin: auto;<br>
           使用定位来进行对齐<br>
           使用浮动来进行对齐<br>

           垂直居中对齐方式：<br>
           使用 padding<br>
           使用 line-height<br>
           使用 position 和 transform<br>
           &nbsp;&nbsp;&nbsp;&nbsp;position: absolute;<br>
           &nbsp;&nbsp;&nbsp;&nbsp;top: 50%;<br>
           &nbsp;&nbsp;&nbsp;&nbsp;left: 50%;<br>
           &nbsp;&nbsp;&nbsp;&nbsp;-ms-transform: translate(-50%, -50%);<br>
           &nbsp;&nbsp;&nbsp;&nbsp;transform: translate(-50%, -50%);<br>
           <br>
       </div>
   </div>
   <!-- CSS 选择器 -->
   <div>
       <h3>id选择器</h3>
       <div>
            id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式<br>
            id {background-color:yellow;}<br>
       </div>
       <h3>类class选择器</h3>
       <div>
            选择器在HTML中以class属性表示<br>
            class {background-color:yellow;}<br>
       </div>
       <h3>后代选择器(空格分割)</h3>
       <div>
            后代选择器用于选取某元素的后代元素<br>
            div p {background-color:yellow;}<br>
       </div>
       <h3>子元素选择器(大于号分割)</h3>
       <div>
            与后代选择器相比，子元素选择器只能选择作为某元素子元素的元素<br>
            div>p {background-color:yellow;}<br>
       </div>
       <h3>相邻选择器(加号分割)</h3>
       <div>
            相邻兄弟选择器可选择紧接在另一元素后的元素，且二者有相同父元素<br>
            div+p {background-color:yellow;}<br>
       </div>
       <h3>普通兄弟选择器(破折号分割)</h3>
       <div>
            后续兄弟选择器选取所有指定元素之后的相邻兄弟元素<br>
            div~p {background-color:yellow;}<br>
       </div>
       <h3>伪类选择器</h3>
       <h3>伪元素选择器</h3>
   </div>
</body>
</html>